/*
 tableExport.jquery.plugin

 Version 1.9.6

 Copyright (c) 2015-2017 hhurz, https://github.com/hhurz

 Original Work Copyright (c) 2014 Giri Raj

 Licensed under the MIT License
*/
(function (c) {
    c.fn.extend({
        tableExport: function (m) {
            function R(b) { var a = []; c(b).find("thead").first().find("th").each(function (b, e) { void 0 !== c(e).attr("data-field") ? a[b] = c(e).attr("data-field") : a[b] = b.toString() }); return a } function K(b) {
                var a = "undefined" !== typeof b[0].cellIndex, d = "undefined" !== typeof b[0].rowIndex, n = a || d ? ta(b) : b.is(":visible"), k = b.data("tableexport-display"); a && "none" != k && "always" != k && (b = c(b[0].parentNode), d = "undefined" !== typeof b[0].rowIndex, k = b.data("tableexport-display")); d && "none" !=
                k && "always" != k && (k = b.closest("table").data("tableexport-display")); return "none" !== k && (1 == n || "always" == k)
            } function ta(b) {
                var a = []; M && (a = G.filter(function () { var a = !1; this.nodeType == b[0].nodeType && ("undefined" !== typeof this.rowIndex && this.rowIndex == b[0].rowIndex ? a = !0 : "undefined" !== typeof this.cellIndex && this.cellIndex == b[0].cellIndex && "undefined" !== typeof this.parentNode.rowIndex && "undefined" !== typeof b[0].parentNode.rowIndex && this.parentNode.rowIndex == b[0].parentNode.rowIndex && (a = !0)); return a })); return 0 ==
                M || 0 == a.length
            } function da(b, e, d) { var n = !1; K(b) ? 0 < a.ignoreColumn.length && (-1 != c.inArray(d, a.ignoreColumn) || -1 != c.inArray(d - e, a.ignoreColumn) || L.length > d && "undefined" != typeof L[d] && -1 != c.inArray(L[d], a.ignoreColumn)) && (n = !0) : n = !0; return n } function y(b, e, d, n, k) {
                if ("function" === typeof k) {
                    var g = !1; "function" === typeof a.onIgnoreRow && (g = a.onIgnoreRow(c(b), d)); if (!1 === g && -1 == c.inArray(d, a.ignoreRow) && -1 == c.inArray(d - n, a.ignoreRow) && K(c(b))) {
                        var w = c(b).find(e), t = 0; w.each(function (b) {
                            var a = c(this), e, n = 1, g =
                            1, C = w.length; if ("undefined" != typeof B[d] && 0 < B[d].length) { var f = b; for (e = 0; e <= f; e++) "undefined" != typeof B[d][e] && (!1 === da(a, C, b + t) && k(null, d, e), delete B[d][e], f++); b += B[d].length; C += B[d].length } a.is("[colspan]") ? (n = parseInt(a.attr("colspan")) || 1, t += 0 < n ? n - 1 : 0) : a.is("[rowspan]") && (g = parseInt(a.attr("rowspan")) || 1); if (!1 === da(a, C, b + t)) for (k(this, d, b), e = 1; e < n; e++) k(null, d, b + e); if (1 < g) for (a = 1; a < g; a++) for ("undefined" == typeof B[d + a] && (B[d + a] = []), B[d + a][b + t] = "", e = 1; e < n; e++) B[d + a][b + t - e] = ""
                        }); if ("undefined" !=
                        typeof B[d] && 0 < B[d].length) for (b = 0; b <= B[d].length; b++) "undefined" != typeof B[d][b] && (k(null, d, b), delete B[d][b])
                    }
                }
            } function ea(b, e) { !0 === a.consoleLog && console.log(b.output()); if ("string" === a.outputMode) return b.output(); if ("base64" === a.outputMode) return H(b.output()); if ("window" === a.outputMode) window.open(URL.createObjectURL(b.output("blob"))); else try { var d = b.output("blob"); saveAs(d, a.fileName + ".pdf") } catch (n) { D(a.fileName + ".pdf", "data:application/pdf" + (e ? "" : ";base64") + ",", e ? b.output("blob") : b.output()) } }
            function fa(b, a, d) {
                var e = 0; "undefined" != typeof d && (e = d.colspan); if (0 <= e) {
                    for (var c = b.width, g = b.textPos.x, w = a.table.columns.indexOf(a.column), t = 1; t < e; t++) c += a.table.columns[w + t].width; 1 < e && ("right" === b.styles.halign ? g = b.textPos.x + c - b.width : "center" === b.styles.halign && (g = b.textPos.x + (c - b.width) / 2)); b.width = c; b.textPos.x = g; "undefined" != typeof d && 1 < d.rowspan && (b.height *= d.rowspan); if ("middle" === b.styles.valign || "bottom" === b.styles.valign) d = ("string" === typeof b.text ? b.text.split(/\r\n|\r|\n/g) : b.text).length ||
                    1, 2 < d && (b.textPos.y -= (2 - 1.15) / 2 * a.row.styles.fontSize * (d - 2) / 3); return !0
                } return !1
            } function ha(b, a, d) { "undefined" != typeof d.images && a.each(function () { var a = c(this).children(); if (c(this).is("img")) { var e = ia(this.src); d.images[e] = { url: this.src, src: this.src } } "undefined" != typeof a && 0 < a.length && ha(b, a, d) }) } function ua(b, a) {
                function d(b) {
                    if (b.url) {
                        var d = new Image; c = ++g; d.crossOrigin = "Anonymous"; d.onerror = d.onload = function () {
                            if (d.complete && (0 === d.src.indexOf("data:image/") && (d.width = b.width || d.width || 0, d.height =
                            b.height || d.height || 0), d.width + d.height)) { var e = document.createElement("canvas"), n = e.getContext("2d"); e.width = d.width; e.height = d.height; n.drawImage(d, 0, 0); b.src = e.toDataURL("image/jpeg") } --g || a(c)
                        }; d.src = b.url
                    }
                } var e, c = 0, g = 0; if ("undefined" != typeof b.images) for (e in b.images) b.images.hasOwnProperty(e) && d(b.images[e]); (e = g) || (a(c), e = void 0); return e
            } function ja(b, e, d) {
                e.each(function () {
                    var e = c(this).children(), k = 0; if (c(this).is("div")) {
                        var g = S(I(this, "background-color"), [255, 255, 255]), w = S(I(this, "border-top-color"),
                        [0, 0, 0]), t = T(this, "border-top-width", a.jspdf.unit), C = this.getBoundingClientRect(), f = this.offsetLeft * d.dw; k = this.offsetTop * d.dh; var h = C.width * d.dw; C = C.height * d.dh; d.doc.setDrawColor.apply(void 0, w); d.doc.setFillColor.apply(void 0, g); d.doc.setLineWidth(t); d.doc.rect(b.x + f, b.y + k, h, C, t ? "FD" : "F")
                    } else if (c(this).is("img") && "undefined" != typeof d.images && (g = ia(this.src), g = d.images[g], "undefined" != typeof g)) {
                        w = b.width / b.height; t = this.width / this.height; f = b.width; h = b.height; C = 19.049976 / 25.4; t <= w ? (h = Math.min(b.height,
                        this.height), f = this.width * h / this.height) : t > w && (f = Math.min(b.width, this.width), h = this.height * f / this.width); f *= C; h *= C; h < b.height && (k = (b.height - h) / 2); try { d.doc.addImage(g.src, b.textPos.x, b.y + k, f, h) } catch (xa) { } b.textPos.x += f
                    } "undefined" != typeof e && 0 < e.length && ja(b, e, d)
                })
            } function ka(b, a, d) {
                if ("function" === typeof d.onAutotableText) d.onAutotableText(d.doc, b, a); else {
                    var e = b.textPos.x, k = b.textPos.y, g = { halign: b.styles.halign, valign: b.styles.valign }; if (a.length) {
                        for (a = a[0]; a.previousSibling;) a = a.previousSibling;
                        for (var w = !1, t = !1; a;) {
                            var f = a.innerText || a.textContent || ""; f = (f.length && " " == f[0] ? " " : "") + c.trim(f) + (1 < f.length && " " == f[f.length - 1] ? " " : ""); c(a).is("br") && (e = b.textPos.x, k += d.doc.internal.getFontSize()); c(a).is("b") ? w = !0 : c(a).is("i") && (t = !0); (w || t) && d.doc.setFontType(w && t ? "bolditalic" : w ? "bold" : "italic"); var h = d.doc.getStringUnitWidth(f) * d.doc.internal.getFontSize(); if (h) {
                                if ("linebreak" === b.styles.overflow && e > b.textPos.x && e + h > b.textPos.x + b.width) {
                                    if (0 <= ".,!%*;:=-".indexOf(f.charAt(0))) {
                                        var l = f.charAt(0);
                                        h = d.doc.getStringUnitWidth(l) * d.doc.internal.getFontSize(); e + h <= b.textPos.x + b.width && (d.doc.autoTableText(l, e, k, g), f = f.substring(1, f.length)); h = d.doc.getStringUnitWidth(f) * d.doc.internal.getFontSize()
                                    } e = b.textPos.x; k += d.doc.internal.getFontSize()
                                } for (; f.length && e + h > b.textPos.x + b.width;) f = f.substring(0, f.length - 1), h = d.doc.getStringUnitWidth(f) * d.doc.internal.getFontSize(); d.doc.autoTableText(f, e, k, g); e += h
                            } if (w || t) c(a).is("b") ? w = !1 : c(a).is("i") && (t = !1), d.doc.setFontType(w || t ? w ? "bold" : "italic" : "normal");
                            a = a.nextSibling
                        } b.textPos.x = e; b.textPos.y = k
                    } else d.doc.autoTableText(b.text, b.textPos.x, b.textPos.y, g)
                }
            } function U(b, a, d) { return b.replace(new RegExp(a.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1"), "g"), d) } function X(b) { b = U(b || "0", a.numbers.html.thousandsSeparator, ""); b = U(b, a.numbers.html.decimalMark, "."); return "number" === typeof b || !1 !== jQuery.isNumeric(b) ? b : !1 } function x(b, e, d) {
                var n = ""; if (null !== b) {
                    var k = c(b); if (k[0].hasAttribute("data-tableexport-value")) var g = (g = k.data("tableexport-value")) ? g +
                    "" : ""; else if (g = k.html(), "function" === typeof a.onCellHtmlData) g = a.onCellHtmlData(k, e, d, g); else if ("" != g) { b = c.parseHTML(g); var f = 0, t = 0; g = ""; c.each(b, function () { if (c(this).is("input")) g += k.find("input").eq(f++).val(); else if (c(this).is("select")) g += k.find("select option:selected").eq(t++).text(); else if ("undefined" === typeof c(this).html()) g += c(this).text(); else if (void 0 === jQuery().bootstrapTable || !0 !== c(this).hasClass("filterControl")) g += c(this).html() }) } if (!0 === a.htmlContent) n = c.trim(g); else if (g &&
                    "" != g) {
                        var h = g.replace(/\n/g, "\u2028").replace(/<br\s*[\/]?>/gi, "\u2060"), l = c("<div/>").html(h).contents(); b = !1; h = ""; c.each(l.text().split("\u2028"), function (b, a) { 0 < b && (h += " "); h += c.trim(a) }); c.each(h.split("\u2060"), function (b, a) { 0 < b && (n += "\n"); n += c.trim(a).replace(/\u00AD/g, "") }); if ("json" == a.type || "excel" === a.type && "xmlss" === a.excelFileFormat || !1 === a.numbers.output) b = X(n), !1 !== b && (n = Number(b)); else if (a.numbers.html.decimalMark != a.numbers.output.decimalMark || a.numbers.html.thousandsSeparator !=
                        a.numbers.output.thousandsSeparator) if (b = X(n), !1 !== b) { l = ("" + b.substr(0 > b ? 1 : 0)).split("."); 1 == l.length && (l[1] = ""); var m = 3 < l[0].length ? l[0].length % 3 : 0; n = (0 > b ? "-" : "") + (a.numbers.output.thousandsSeparator ? (m ? l[0].substr(0, m) + a.numbers.output.thousandsSeparator : "") + l[0].substr(m).replace(/(\d{3})(?=\d)/g, "$1" + a.numbers.output.thousandsSeparator) : l[0]) + (l[1].length ? a.numbers.output.decimalMark + l[1] : "") }
                    } !0 === a.escape && (n = escape(n)); "function" === typeof a.onCellData && (n = a.onCellData(k, e, d, n))
                } return n
            } function va(b,
            a, d) { return a + "-" + d.toLowerCase() } function S(b, a) { var d = /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/.exec(b), e = a; d && (e = [parseInt(d[1]), parseInt(d[2]), parseInt(d[3])]); return e } function la(b) {
                var a = I(b, "text-align"), d = I(b, "font-weight"), n = I(b, "font-style"), k = ""; "start" == a && (a = "rtl" == I(b, "direction") ? "right" : "left"); 700 <= d && (k = "bold"); "italic" == n && (k += n); "" === k && (k = "normal"); a = {
                    style: { align: a, bcolor: S(I(b, "background-color"), [255, 255, 255]), color: S(I(b, "color"), [0, 0, 0]), fstyle: k }, colspan: parseInt(c(b).attr("colspan")) ||
                    0, rowspan: parseInt(c(b).attr("rowspan")) || 0
                }; null !== b && (b = b.getBoundingClientRect(), a.rect = { width: b.width, height: b.height }); return a
            } function I(a, e) { try { return window.getComputedStyle ? (e = e.replace(/([a-z])([A-Z])/, va), window.getComputedStyle(a, null).getPropertyValue(e)) : a.currentStyle ? a.currentStyle[e] : a.style[e] } catch (d) { } return "" } function T(a, e, d) {
                e = I(a, e).match(/\d+/); if (null !== e) {
                    e = e[0]; a = a.parentElement; var b = document.createElement("div"); b.style.overflow = "hidden"; b.style.visibility = "hidden";
                    a.appendChild(b); b.style.width = 100 + d; d = 100 / b.offsetWidth; a.removeChild(b); return e * d
                } return 0
            } function Y() { if (!(this instanceof Y)) return new Y; this.SheetNames = []; this.Sheets = {} } function ma(a) { for (var b = new ArrayBuffer(a.length), d = new Uint8Array(b), c = 0; c != a.length; ++c) d[c] = a.charCodeAt(c) & 255; return b } function wa(a) {
                for (var b = {}, d = { s: { c: 1E7, r: 1E7 }, e: { c: 0, r: 0 } }, c = 0; c != a.length; ++c) for (var k = 0; k != a[c].length; ++k) {
                    d.s.r > c && (d.s.r = c); d.s.c > k && (d.s.c = k); d.e.r < c && (d.e.r = c); d.e.c < k && (d.e.c = k); var g = { v: a[c][k] };
                    if (null !== g.v) { var f = XLSX.utils.encode_cell({ c: k, r: c }); if ("number" === typeof g.v) g.t = "n"; else if ("boolean" === typeof g.v) g.t = "b"; else if (g.v instanceof Date) { g.t = "n"; g.z = XLSX.SSF._table[14]; var t = g; var h = (Date.parse(g.v) - new Date(Date.UTC(1899, 11, 30))) / 864E5; t.v = h } else g.t = "s"; b[f] = g }
                } 1E7 > d.s.c && (b["!ref"] = XLSX.utils.encode_range(d)); return b
            } function ia(a) { var b = 0, d; if (0 === a.length) return b; var c = 0; for (d = a.length; c < d; c++) { var k = a.charCodeAt(c); b = (b << 5) - b + k; b |= 0 } return b } function D(a, e, d) {
                var b = window.navigator.userAgent;
                if (!1 !== a && (0 < b.indexOf("MSIE ") || b.match(/Trident.*rv\:11\./))) if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveOrOpenBlob(new Blob([d]), a); else { if (e = document.createElement("iframe")) document.body.appendChild(e), e.setAttribute("style", "display:none"), e.contentDocument.open("txt/html", "replace"), e.contentDocument.write(d), e.contentDocument.close(), e.focus(), e.contentDocument.execCommand("SaveAs", !0, a), document.body.removeChild(e) } else if (b = document.createElement("a")) {
                    var c = null; b.style.display =
                    "none"; !1 !== a ? b.download = a : b.target = "_blank"; "object" == typeof d ? (c = window.URL.createObjectURL(d), b.href = c) : 0 <= e.toLowerCase().indexOf("base64,") ? b.href = e + H(d) : b.href = e + encodeURIComponent(d); document.body.appendChild(b); if (document.createEvent) null === V && (V = document.createEvent("MouseEvents")), V.initEvent("click", !0, !1), b.dispatchEvent(V); else if (document.createEventObject) b.fireEvent("onclick"); else if ("function" == typeof b.onclick) b.onclick(); c && window.URL.revokeObjectURL(c); document.body.removeChild(b)
                }
            }
            function H(a) {
                var b, d = "", c = 0; a = a.replace(/\x0d\x0a/g, "\n"); var k = ""; for (b = 0; b < a.length; b++) { var g = a.charCodeAt(b); 128 > g ? k += String.fromCharCode(g) : (127 < g && 2048 > g ? k += String.fromCharCode(g >> 6 | 192) : (k += String.fromCharCode(g >> 12 | 224), k += String.fromCharCode(g >> 6 & 63 | 128)), k += String.fromCharCode(g & 63 | 128)) } for (a = k; c < a.length;) {
                    var f = a.charCodeAt(c++); k = a.charCodeAt(c++); b = a.charCodeAt(c++); g = f >> 2; f = (f & 3) << 4 | k >> 4; var t = (k & 15) << 2 | b >> 6; var h = b & 63; isNaN(k) ? t = h = 64 : isNaN(b) && (h = 64); d = d + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(g) +
                    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(f) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(t) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(h)
                } return d
            } var a = {
                consoleLog: !1, csvEnclosure: '"', csvSeparator: ",", csvUseBOM: !0, displayTableName: !1, escape: !1, excelFileFormat: "xlshtml", excelstyles: [], fileName: "tableExport", htmlContent: !1, ignoreColumn: [], ignoreRow: [], jsonScope: "all", jspdf: {
                    orientation: "p", unit: "pt", format: "a4",
                    margins: { left: 20, right: 10, top: 10, bottom: 10 }, onDocCreated: null, autotable: { styles: { cellPadding: 2, rowHeight: 12, fontSize: 8, fillColor: 255, textColor: 50, fontStyle: "normal", overflow: "ellipsize", halign: "left", valign: "middle" }, headerStyles: { fillColor: [52, 73, 94], textColor: 255, fontStyle: "bold", halign: "center" }, alternateRowStyles: { fillColor: 245 }, tableExport: { doc: null, onAfterAutotable: null, onBeforeAutotable: null, onAutotableText: null, onTable: null, outputImages: !0 } }
                }, numbers: {
                    html: { decimalMark: ".", thousandsSeparator: "," },
                    output: { decimalMark: ".", thousandsSeparator: "," }
                }, onCellData: null, onCellHtmlData: null, onIgnoreRow: null, onMsoNumberFormat: null, outputMode: "file", pdfmake: { enabled: !1, docDefinition: { pageOrientation: "portrait", defaultStyle: { font: "Roboto" } }, fonts: {} }, tbodySelector: "tr", tfootSelector: "tr", theadSelector: "tr", tableName: "myTableName", type: "csv", worksheetName: "Worksheet"
            }, u = this, V = null, q = [], h = [], p = 0, B = [], l = "", L = [], G = [], M = !1; c.extend(!0, a, m); L = R(u); if ("csv" == a.type || "tsv" == a.type || "txt" == a.type) {
                var E = "", O = 0;
                p = 0; var Z = function (b, e, d) {
                    b.each(function () {
                        l = ""; y(this, e, p, d + b.length, function (b, d, c) { var e = l, g = ""; if (null !== b) if (b = x(b, d, c), d = null === b || "" === b ? "" : b.toString(), "tsv" == a.type) b instanceof Date && b.toLocaleString(), g = U(d, "\t", " "); else if (b instanceof Date) g = a.csvEnclosure + b.toLocaleString() + a.csvEnclosure; else if (g = U(d, a.csvEnclosure, a.csvEnclosure + a.csvEnclosure), 0 <= g.indexOf(a.csvSeparator) || /[\r\n ]/g.test(g)) g = a.csvEnclosure + g + a.csvEnclosure; l = e + (g + ("tsv" == a.type ? "\t" : a.csvSeparator)) }); l = c.trim(l).substring(0,
                        l.length - 1); 0 < l.length && (0 < E.length && (E += "\n"), E += l); p++
                    }); return b.length
                }; O += Z(c(u).find("thead").first().find(a.theadSelector), "th,td", O); c(u).find("tbody").each(function () { O += Z(c(this).find(a.tbodySelector), "td,th", O) }); a.tfootSelector.length && Z(c(u).find("tfoot").first().find(a.tfootSelector), "td,th", O); E += "\n"; !0 === a.consoleLog && console.log(E); if ("string" === a.outputMode) return E; if ("base64" === a.outputMode) return H(E); if ("window" === a.outputMode) {
                    D(!1, "data:text/" + ("csv" == a.type ? "csv" : "plain") +
                    ";charset=utf-8,", E); return
                } try { var z = new Blob([E], { type: "text/" + ("csv" == a.type ? "csv" : "plain") + ";charset=utf-8" }); saveAs(z, a.fileName + "." + a.type, "csv" != a.type || !1 === a.csvUseBOM) } catch (b) { D(a.fileName + "." + a.type, "data:text/" + ("csv" == a.type ? "csv" : "plain") + ";charset=utf-8," + ("csv" == a.type && a.csvUseBOM ? "\ufeff" : ""), E) }
            } else if ("sql" == a.type) {
                p = 0; var v = "INSERT INTO `" + a.tableName + "` ("; q = c(u).find("thead").first().find(a.theadSelector); q.each(function () {
                    y(this, "th,td", p, q.length, function (a, c, d) {
                        v += "'" +
                        x(a, c, d) + "',"
                    }); p++; v = c.trim(v); v = c.trim(v).substring(0, v.length - 1)
                }); v += ") VALUES "; c(u).find("tbody").each(function () { h.push.apply(h, c(this).find(a.tbodySelector)) }); a.tfootSelector.length && h.push.apply(h, c(u).find("tfoot").find(a.tfootSelector)); c(h).each(function () { l = ""; y(this, "td,th", p, q.length + h.length, function (a, c, d) { l += "'" + x(a, c, d) + "'," }); 3 < l.length && (v += "(" + l, v = c.trim(v).substring(0, v.length - 1), v += "),"); p++ }); v = c.trim(v).substring(0, v.length - 1); v += ";"; !0 === a.consoleLog && console.log(v); if ("string" ===
                a.outputMode) return v; if ("base64" === a.outputMode) return H(v); try { z = new Blob([v], { type: "text/plain;charset=utf-8" }), saveAs(z, a.fileName + ".sql") } catch (b) { D(a.fileName + ".sql", "data:application/sql;charset=utf-8,", v) }
            } else if ("json" == a.type) {
                var N = []; q = c(u).find("thead").first().find(a.theadSelector); q.each(function () { var a = []; y(this, "th,td", p, q.length, function (b, d, c) { a.push(x(b, d, c)) }); N.push(a) }); var aa = []; c(u).find("tbody").each(function () { h.push.apply(h, c(this).find(a.tbodySelector)) }); a.tfootSelector.length &&
                h.push.apply(h, c(u).find("tfoot").find(a.tfootSelector)); c(h).each(function () { var a = {}, e = 0; y(this, "td,th", p, q.length + h.length, function (b, c, k) { N.length ? a[N[N.length - 1][e]] = x(b, c, k) : a[e] = x(b, c, k); e++ }); !1 === c.isEmptyObject(a) && aa.push(a); p++ }); m = ""; m = "head" == a.jsonScope ? JSON.stringify(N) : "data" == a.jsonScope ? JSON.stringify(aa) : JSON.stringify({ header: N, data: aa }); !0 === a.consoleLog && console.log(m); if ("string" === a.outputMode) return m; if ("base64" === a.outputMode) return H(m); try {
                    z = new Blob([m], { type: "application/json;charset=utf-8" }),
                    saveAs(z, a.fileName + ".json")
                } catch (b) { D(a.fileName + ".json", "data:application/json;charset=utf-8;base64,", m) }
            } else if ("xml" === a.type) {
                p = 0; var F = '<?xml version="1.0" encoding="utf-8"?>'; F += "<tabledata><fields>"; q = c(u).find("thead").first().find(a.theadSelector); q.each(function () { y(this, "th,td", p, q.length, function (a, c, d) { F += "<field>" + x(a, c, d) + "</field>" }); p++ }); F += "</fields><data>"; var na = 1; c(u).find("tbody").each(function () { h.push.apply(h, c(this).find(a.tbodySelector)) }); a.tfootSelector.length && h.push.apply(h,
                c(u).find("tfoot").find(a.tfootSelector)); c(h).each(function () { var a = 1; l = ""; y(this, "td,th", p, q.length + h.length, function (b, d, c) { l += "<column-" + a + ">" + x(b, d, c) + "</column-" + a + ">"; a++ }); 0 < l.length && "<column-1></column-1>" != l && (F += '<row id="' + na + '">' + l + "</row>", na++); p++ }); F += "</data></tabledata>"; !0 === a.consoleLog && console.log(F); if ("string" === a.outputMode) return F; if ("base64" === a.outputMode) return H(F); try { z = new Blob([F], { type: "application/xml;charset=utf-8" }), saveAs(z, a.fileName + ".xml") } catch (b) {
                    D(a.fileName +
                    ".xml", "data:application/xml;charset=utf-8;base64,", F)
                }
            } else if ("excel" === a.type && "xmlss" === a.excelFileFormat) {
                var ba = []; c(u).filter(function () { return K(c(this)) }).each(function () {
                    var b = c(this), e = ""; G = b.find("tr, th, td").filter(":hidden"); M = 0 < G.length; p = 0; L = R(this); q = b.find("thead").first().find(a.theadSelector); e += "<Table>"; var d = 0; q.each(function () {
                        l = ""; y(this, "th,td", p, q.length, function (a, b, c) { null !== a && (l += '<Cell><Data ss:Type="String">' + x(a, b, c) + "</Data></Cell>", d++) }); 0 < l.length && (e += "<Row>" +
                        l + "</Row>"); p++
                    }); h = []; b.find("tbody").each(function () { h.push.apply(h, c(this).find(a.tbodySelector)) }); c(h).each(function () {
                        l = ""; y(this, "td,th", p, q.length + h.length, function (a, b, d) { if (null !== a) { var c = "String", e = ""; a = x(a, b, d); !1 !== jQuery.isNumeric(a) ? c = "Number" : (b = a, -1 < b.indexOf("%") ? (b = X(b.replace(/%/g, "")), !1 !== b && (b /= 100)) : b = !1, !1 !== b && (a = b, c = "Number", e = ' ss:StyleID="pct1"')); "Number" !== c && (a = a.replace(/\n/g, "<br>")); l += "<Cell" + e + '><Data ss:Type="' + c + '">' + a + "</Data></Cell>" } }); 0 < l.length && (e += "<Row>" +
                        l + "</Row>"); p++
                    }); e += "</Table>"; ba.push(e); !0 === a.consoleLog && console.log(e)
                }); m = '<?xml version="1.0" encoding="UTF-8"?><?mso-application progid="Excel.Sheet"?> <Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:html="http://www.w3.org/TR/REC-html40"> <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"> <Created>' +
                (new Date).toISOString() + '</Created> </DocumentProperties> <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office"> <AllowPNG/> </OfficeDocumentSettings> <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel"> <WindowHeight>9000</WindowHeight> <WindowWidth>13860</WindowWidth> <WindowTopX>0</WindowTopX> <WindowTopY>0</WindowTopY> <ProtectStructure>False</ProtectStructure> <ProtectWindows>False</ProtectWindows> </ExcelWorkbook> <Styles> <Style ss:ID="Default" ss:Name="Default"> <Alignment ss:Vertical="Center"/> <Borders/> <Font/> <Interior/> <NumberFormat/> <Protection/> </Style> <Style ss:ID="Normal" ss:Name="Normal"/> <Style ss:ID="pct1">   <NumberFormat ss:Format="Percent"/> </Style> </Styles>';
                for (var A = 0; A < ba.length; A++) m += '<Worksheet ss:Name="' + ("string" === typeof a.worksheetName ? a.worksheetName + " " + (A + 1) : "undefined" !== typeof a.worksheetName[A] ? a.worksheetName[A] : "Table " + (A + 1)) + '">' + ba[A] + "<WorksheetOptions/> </Worksheet>"; m += "</Workbook>"; !0 === a.consoleLog && console.log(m); if ("string" === a.outputMode) return m; if ("base64" === a.outputMode) return H(m); try { z = new Blob([m], { type: "application/xml;charset=utf-8" }), saveAs(z, a.fileName + ".xml") } catch (b) {
                    D(a.fileName + ".xml", "data:application/xml;charset=utf-8;base64,",
                    m)
                }
            } else if ("excel" == a.type || "xls" == a.type || "word" == a.type || "doc" == a.type) {
                m = "excel" == a.type || "xls" == a.type ? "excel" : "word"; A = "excel" == m ? "xls" : "doc"; var r = 'xmlns:x="urn:schemas-microsoft-com:office:' + m + '"', J = ""; c(u).filter(function () { return K(c(this)) }).each(function () {
                    var b = c(this); G = b.find("tr, th, td").filter(":hidden"); M = 0 < G.length; p = 0; L = R(this); J += "<table><thead>"; q = b.find("thead").first().find(a.theadSelector); q.each(function () {
                        l = ""; y(this, "th,td", p, q.length, function (b, d, f) {
                            if (null !== b) {
                                var e =
                                ""; l += "<th"; for (var g in a.excelstyles) if (a.excelstyles.hasOwnProperty(g)) { var h = c(b).css(a.excelstyles[g]); "" !== h && "0px none rgb(0, 0, 0)" != h && "rgba(0, 0, 0, 0)" != h && (e += "" === e ? 'style="' : ";", e += a.excelstyles[g] + ":" + h) } "" !== e && (l += " " + e + '"'); c(b).is("[colspan]") && (l += ' colspan="' + c(b).attr("colspan") + '"'); c(b).is("[rowspan]") && (l += ' rowspan="' + c(b).attr("rowspan") + '"'); l += ">" + x(b, d, f) + "</th>"
                            }
                        }); 0 < l.length && (J += "<tr>" + l + "</tr>"); p++
                    }); J += "</thead><tbody>"; b.find("tbody").each(function () {
                        h.push.apply(h,
                        c(this).find(a.tbodySelector))
                    }); a.tfootSelector.length && h.push.apply(h, b.find("tfoot").find(a.tfootSelector)); c(h).each(function () {
                        var b = c(this); l = ""; y(this, "td,th", p, q.length + h.length, function (d, e, f) {
                            if (null !== d) {
                                var g = x(d, e, f), h = "", k = c(d).data("tableexport-msonumberformat"); "undefined" == typeof k && "function" === typeof a.onMsoNumberFormat && (k = a.onMsoNumberFormat(d, e, f)); "undefined" != typeof k && "" !== k && (h = "style=\"mso-number-format:'" + k + "'"); for (var n in a.excelstyles) a.excelstyles.hasOwnProperty(n) &&
                                (k = c(d).css(a.excelstyles[n]), "" === k && (k = b.css(a.excelstyles[n])), "" !== k && "0px none rgb(0, 0, 0)" != k && "rgba(0, 0, 0, 0)" != k && (h += "" === h ? 'style="' : ";", h += a.excelstyles[n] + ":" + k)); l += "<td"; "" !== h && (l += " " + h + '"'); c(d).is("[colspan]") && (l += ' colspan="' + c(d).attr("colspan") + '"'); c(d).is("[rowspan]") && (l += ' rowspan="' + c(d).attr("rowspan") + '"'); "string" === typeof g && "" != g && (g = g.replace(/\n/g, "<br>")); l += ">" + g + "</td>"
                            }
                        }); 0 < l.length && (J += "<tr>" + l + "</tr>"); p++
                    }); a.displayTableName && (J += "<tr><td></td></tr><tr><td></td></tr><tr><td>" +
                    x(c("<p>" + a.tableName + "</p>")) + "</td></tr>"); J += "</tbody></table>"; !0 === a.consoleLog && console.log(J)
                }); r = '<html xmlns:o="urn:schemas-microsoft-com:office:office" ' + r + ' xmlns="http://www.w3.org/TR/REC-html40">' + ('<meta http-equiv="content-type" content="application/vnd.ms-' + m + '; charset=UTF-8">') + "<head>"; "excel" === m && (r += "\x3c!--[if gte mso 9]>", r += "<xml>", r += "<x:ExcelWorkbook>", r += "<x:ExcelWorksheets>", r += "<x:ExcelWorksheet>", r += "<x:Name>", r += a.worksheetName, r += "</x:Name>", r += "<x:WorksheetOptions>",
                r += "<x:DisplayGridlines/>", r += "</x:WorksheetOptions>", r += "</x:ExcelWorksheet>", r += "</x:ExcelWorksheets>", r += "</x:ExcelWorkbook>", r += "</xml>", r += "<![endif]--\x3e"); r += "<style>br {mso-data-placement:same-cell;}</style>"; r += "</head>"; r += "<body>"; r += J; r += "</body>"; r += "</html>"; !0 === a.consoleLog && console.log(r); if ("string" === a.outputMode) return r; if ("base64" === a.outputMode) return H(r); try { z = new Blob([r], { type: "application/vnd.ms-" + a.type }), saveAs(z, a.fileName + "." + A) } catch (b) {
                    D(a.fileName + "." + A, "data:application/vnd.ms-" +
                    m + ";base64,", r)
                }
            } else if ("xlsx" == a.type) {
                var oa = [], ca = []; p = 0; h = c(u).find("thead").first().find(a.theadSelector); c(u).find("tbody").each(function () { h.push.apply(h, c(this).find(a.tbodySelector)) }); a.tfootSelector.length && h.push.apply(h, c(u).find("tfoot").find(a.tfootSelector)); c(h).each(function () {
                    var b = []; y(this, "th,td", p, h.length, function (c, d, f) {
                        if ("undefined" !== typeof c && null !== c) {
                            f = x(c, d, f); d = parseInt(c.getAttribute("colspan")); c = parseInt(c.getAttribute("rowspan")); ca.forEach(function (a) {
                                if (p >=
                                a.s.r && p <= a.e.r && b.length >= a.s.c && b.length <= a.e.c) for (var d = 0; d <= a.e.c - a.s.c; ++d) b.push(null)
                            }); if (c || d) d = d || 1, ca.push({ s: { r: p, c: b.length }, e: { r: p + (c || 1) - 1, c: b.length + d - 1 } }); "function" !== typeof a.onCellData && "" !== f && f == +f && (f = +f); b.push("" !== f ? f : null); if (d) for (c = 0; c < d - 1; ++c) b.push(null)
                        }
                    }); oa.push(b); p++
                }); m = new Y; A = wa(oa); A["!merges"] = ca; m.SheetNames.push(a.worksheetName); m.Sheets[a.worksheetName] = A; m = XLSX.write(m, { bookType: a.type, bookSST: !1, type: "binary" }); try {
                    z = new Blob([ma(m)], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8" }),
                    saveAs(z, a.fileName + "." + a.type)
                } catch (b) { D(a.fileName + "." + a.type, "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8,", ma(m)) }
            } else if ("png" == a.type) html2canvas(c(u)[0]).then(function (b) {
                b = b.toDataURL(); for (var c = atob(b.substring(22)), d = new ArrayBuffer(c.length), f = new Uint8Array(d), h = 0; h < c.length; h++) f[h] = c.charCodeAt(h); !0 === a.consoleLog && console.log(c); if ("string" === a.outputMode) return c; if ("base64" === a.outputMode) return H(b); if ("window" === a.outputMode) window.open(b);
                else try { z = new Blob([d], { type: "image/png" }), saveAs(z, a.fileName + ".png") } catch (g) { D(a.fileName + ".png", "data:image/png,", z) }
            }); else if ("pdf" == a.type) if (!0 === a.pdfmake.enabled) {
                m = []; var pa = []; p = 0; A = function (a, e, d) {
                    var b = 0; c(a).each(function () {
                        var a = []; y(this, e, p, d, function (b, d, c) { if ("undefined" !== typeof b && null !== b) { var e = parseInt(b.getAttribute("colspan")), g = parseInt(b.getAttribute("rowspan")); b = x(b, d, c) || " "; 1 < e || 1 < g ? a.push({ colSpan: e || 1, rowSpan: g || 1, text: b }) : a.push(b) } else a.push(" ") }); a.length &&
                        pa.push(a); b < a.length && (b = a.length); p++
                    }); return b
                }; q = c(this).find("thead").first().find(a.theadSelector); r = A(q, "th,td", q.length); for (var qa = m.length; qa < r; qa++) m.push("*"); c(this).find("tbody").each(function () { h.push.apply(h, c(this).find(a.tbodySelector)) }); a.tfootSelector.length && h.push.apply(h, c(this).find("tfoot").find(a.tfootSelector)); A(h, "th,td", q.length + h.length); m = { content: [{ table: { headerRows: q.length, widths: m, body: pa } }] }; c.extend(!0, m, a.pdfmake.docDefinition); pdfMake.fonts = {
                    Roboto: {
                        normal: "Roboto-Regular.ttf",
                        bold: "Roboto-Medium.ttf", italics: "Roboto-Italic.ttf", bolditalics: "Roboto-MediumItalic.ttf"
                    }
                }; c.extend(!0, pdfMake.fonts, a.pdfmake.fonts); pdfMake.createPdf(m).getBuffer(function (b) { try { var c = new Blob([b], { type: "application/pdf" }); saveAs(c, a.fileName + ".pdf") } catch (d) { D(a.fileName + ".pdf", "data:application/pdf;base64,", b) } })
            } else if (!1 === a.jspdf.autotable) {
                m = { dim: { w: T(c(u).first().get(0), "width", "mm"), h: T(c(u).first().get(0), "height", "mm") }, pagesplit: !1 }; var ra = new jsPDF(a.jspdf.orientation, a.jspdf.unit,
                a.jspdf.format); ra.addHTML(c(u).first(), a.jspdf.margins.left, a.jspdf.margins.top, m, function () { ea(ra, !1) })
            } else {
                var f = a.jspdf.autotable.tableExport; if ("string" === typeof a.jspdf.format && "bestfit" === a.jspdf.format.toLowerCase()) {
                    var P = { a0: [2383.94, 3370.39], a1: [1683.78, 2383.94], a2: [1190.55, 1683.78], a3: [841.89, 1190.55], a4: [595.28, 841.89] }, W = "", Q = "", sa = 0; c(u).each(function () {
                        if (K(c(this))) {
                            var a = T(c(this).get(0), "width", "pt"); if (a > sa) {
                                a > P.a0[0] && (W = "a0", Q = "l"); for (var e in P) P.hasOwnProperty(e) && P[e][1] >
                                a && (W = e, Q = "l", P[e][0] > a && (Q = "p")); sa = a
                            }
                        }
                    }); a.jspdf.format = "" === W ? "a4" : W; a.jspdf.orientation = "" === Q ? "w" : Q
                } if (null == f.doc && (f.doc = new jsPDF(a.jspdf.orientation, a.jspdf.unit, a.jspdf.format), "function" === typeof a.jspdf.onDocCreated)) a.jspdf.onDocCreated(f.doc); !0 === f.outputImages && (f.images = {}); "undefined" != typeof f.images && (c(u).filter(function () { return K(c(this)) }).each(function () {
                    var b = 0; G = c(this).find("tr, th, td").filter(":hidden"); M = 0 < G.length; q = c(this).find("thead").find(a.theadSelector); c(this).find("tbody").each(function () {
                        h.push.apply(h,
                        c(this).find(a.tbodySelector))
                    }); a.tfootSelector.length && h.push.apply(h, c(this).find("tfoot").find(a.tfootSelector)); c(h).each(function () { y(this, "td,th", q.length + b, q.length + h.length, function (a) { if ("undefined" !== typeof a && null !== a) { var b = c(a).children(); "undefined" != typeof b && 0 < b.length && ha(a, b, f) } }); b++ })
                }), q = [], h = []); ua(f, function () {
                    c(u).filter(function () { return K(c(this)) }).each(function () {
                        var b, e = 0; G = c(this).find("tr, th, td").filter(":hidden"); M = 0 < G.length; L = R(this); f.columns = []; f.rows = []; f.rowoptions =
                        {}; if ("function" === typeof f.onTable && !1 === f.onTable(c(this), a)) return !0; a.jspdf.autotable.tableExport = null; var d = c.extend(!0, {}, a.jspdf.autotable); a.jspdf.autotable.tableExport = f; d.margin = {}; c.extend(!0, d.margin, a.jspdf.margins); d.tableExport = f; "function" !== typeof d.beforePageContent && (d.beforePageContent = function (a) { 1 == a.pageCount && a.table.rows.concat(a.table.headerRow).forEach(function (b) { 0 < b.height && (b.height += (2 - 1.15) / 2 * b.styles.fontSize, a.table.height += (2 - 1.15) / 2 * b.styles.fontSize) }) }); "function" !==
                        typeof d.createdHeaderCell && (d.createdHeaderCell = function (a, b) {
                            a.styles = c.extend({}, b.row.styles); if ("undefined" != typeof f.columns[b.column.dataKey]) {
                                var e = f.columns[b.column.dataKey]; if ("undefined" != typeof e.rect) {
                                    a.contentWidth = e.rect.width; if ("undefined" == typeof f.heightRatio || 0 === f.heightRatio) { var g = b.row.raw[b.column.dataKey].rowspan ? b.row.raw[b.column.dataKey].rect.height / b.row.raw[b.column.dataKey].rowspan : b.row.raw[b.column.dataKey].rect.height; f.heightRatio = a.styles.rowHeight / g } g = b.row.raw[b.column.dataKey].rect.height *
                                    f.heightRatio; g > a.styles.rowHeight && (a.styles.rowHeight = g)
                                } "undefined" != typeof e.style && !0 !== e.style.hidden && (a.styles.halign = e.style.align, "inherit" === d.styles.fillColor && (a.styles.fillColor = e.style.bcolor), "inherit" === d.styles.textColor && (a.styles.textColor = e.style.color), "inherit" === d.styles.fontStyle && (a.styles.fontStyle = e.style.fstyle))
                            }
                        }); "function" !== typeof d.createdCell && (d.createdCell = function (a, b) {
                            var c = f.rowoptions[b.row.index + ":" + b.column.dataKey]; "undefined" != typeof c && "undefined" != typeof c.style &&
                            !0 !== c.style.hidden && (a.styles.halign = c.style.align, "inherit" === d.styles.fillColor && (a.styles.fillColor = c.style.bcolor), "inherit" === d.styles.textColor && (a.styles.textColor = c.style.color), "inherit" === d.styles.fontStyle && (a.styles.fontStyle = c.style.fstyle))
                        }); "function" !== typeof d.drawHeaderCell && (d.drawHeaderCell = function (a, b) { var c = f.columns[b.column.dataKey]; return (!0 !== c.style.hasOwnProperty("hidden") || !0 !== c.style.hidden) && 0 <= c.rowIndex ? fa(a, b, c) : !1 }); "function" !== typeof d.drawCell && (d.drawCell =
                        function (a, b) { var c = f.rowoptions[b.row.index + ":" + b.column.dataKey]; if (fa(a, b, c)) if (f.doc.rect(a.x, a.y, a.width, a.height, a.styles.fillStyle), "undefined" != typeof c && "undefined" != typeof c.kids && 0 < c.kids.length) { var d = a.height / c.rect.height; if (d > f.dh || "undefined" == typeof f.dh) f.dh = d; f.dw = a.width / c.rect.width; d = a.textPos.y; ja(a, c.kids, f); a.textPos.y = d; ka(a, c.kids, f) } else ka(a, {}, f); return !1 }); f.headerrows = []; q = c(this).find("thead").find(a.theadSelector); q.each(function () {
                            b = 0; f.headerrows[e] = []; y(this, "th,td",
                            e, q.length, function (a, c, d) { var g = la(a); g.title = x(a, c, d); g.key = b++; g.rowIndex = e; f.headerrows[e].push(g) }); e++
                        }); if (0 < e) for (var l = e - 1; 0 <= l;) c.each(f.headerrows[l], function () { var a = this; 0 < l && null === this.rect && (a = f.headerrows[l - 1][this.key]); null !== a && 0 <= a.rowIndex && (!0 !== a.style.hasOwnProperty("hidden") || !0 !== a.style.hidden) && f.columns.push(a) }), l = 0 < f.columns.length ? -1 : l - 1; var k = 0; h = []; c(this).find("tbody").each(function () { h.push.apply(h, c(this).find(a.tbodySelector)) }); a.tfootSelector.length && h.push.apply(h,
                        c(this).find("tfoot").find(a.tfootSelector)); c(h).each(function () { var a = []; b = 0; y(this, "td,th", e, q.length + h.length, function (d, e, h) { if ("undefined" === typeof f.columns[b]) { var g = { title: "", key: b, style: { hidden: !0 } }; f.columns.push(g) } "undefined" !== typeof d && null !== d ? (g = la(d), g.kids = c(d).children()) : (g = c.extend(!0, {}, f.rowoptions[k + ":" + (b - 1)]), g.colspan = -1); f.rowoptions[k + ":" + b++] = g; a.push(x(d, e, h)) }); a.length && (f.rows.push(a), k++); e++ }); if ("function" === typeof f.onBeforeAutotable) f.onBeforeAutotable(c(this),
                        f.columns, f.rows, d); f.doc.autoTable(f.columns, f.rows, d); if ("function" === typeof f.onAfterAutotable) f.onAfterAutotable(c(this), d); a.jspdf.autotable.startY = f.doc.autoTableEndPosY() + d.margin.top
                    }); ea(f.doc, "undefined" != typeof f.images && !1 === jQuery.isEmptyObject(f.images)); "undefined" != typeof f.headerrows && (f.headerrows.length = 0); "undefined" != typeof f.columns && (f.columns.length = 0); "undefined" != typeof f.rows && (f.rows.length = 0); delete f.doc; f.doc = null
                })
            } return this
        }
    })
})(jQuery);